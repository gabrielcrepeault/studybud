shiny::runApp()
install.packages("hexSticker")
## *************************************
## Génération du logo pour l'application
## Gabriel Crépeault-Cauchon
## 15/10/2019
## *************************************
## Importation des packages nécessaires
# install.packages("hexSticker")
library(hexSticker)
sticker(package = 'yo')
plot(1:5)
sticker(plot(1:5), package = 'yo')
sticker(plot(1:5), package = 'yo', s_x = 1, s_y = 0.5)
sticker(plot(1:5), package = 'yo', s_x = 1, s_y = 0.5, filename = 'ouin.png')
sticker(plot(1:5), package = 'yo',
p_size=20, s_x=.8, s_y=.6, s_width=1.4, s_height=1.2,
filename = 'ouin.png')
?sticker
p <- ggplot(aes(x = mpg, y = wt), data = mtcars) + geom_point()
library(ggplot2)
p <- ggplot(aes(x = mpg, y = wt), data = mtcars) + geom_point()
p <- p + theme_void() + theme_transparent()
sticker(p, package="hexSticker", p_size=20, s_x=1, s_y=.75, s_width=1.3, s_height=1,
filename="inst/figures/ggplot2.png")
runApp()
library(ggplot2)
x <- 1:1000
x <- 1:1000
dat <- data.frame(
prime = x,
V = 0.2 * x,
fixe = 50
)
dat
geom_point(aes(y = fixe, col = 'fixe))
ggplot(aes(x = prime)) +
geom_point(aes(y = V, col = 'Variable')) +
library(ggplot2)
ggplot(aes(x = prime)) +
geom_point(aes(y = V, col = 'Variable')) +
geom_point(aes(y = fixe, col = 'fixe'))
dat %>%
ggplot(aes(x = prime)) +
geom_point(aes(y = V, col = 'Variable')) +
geom_point(aes(y = fixe, col = 'fixe'))
library(tidyverse)
library(magrittr)
dat %>%
ggplot(aes(x = prime)) +
geom_point(aes(y = V, col = 'Variable')) +
geom_point(aes(y = fixe, col = 'fixe'))
dat %>%
ggplot(aes(x = prime)) +
geom_point(aes(y = V, col = 'Variable')) +
geom_point(aes(y = fixe, col = 'fixe')) +
theme(legend.title = 'Méthode')
dat %>%
ggplot(aes(x = prime)) +
geom_point(aes(y = V, col = 'Variable')) +
geom_point(aes(y = fixe, col = 'fixe')) +
legend(title = 'yo')
dat %>%
ggplot(aes(x = prime)) +
geom_point(aes(y = V, col = 'Variable')) +
geom_point(aes(y = fixe, col = 'fixe')) +
legend(title = 'yo')
dat %>%
ggplot(aes(x = prime)) +
geom_point(aes(y = V, col = 'Variable')) +
geom_point(aes(y = fixe, col = 'fixe'))
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
updateSelectInput(session,'files', choices = sample(files, 1), label = label = 'Choisir un fichier')
runApp()
x <- c('un', 'deux', 'trois')
sample(x,1)
sample(x,1)
sample(x,1)
runApp()
runApp()
file <- c('un', 'deux', 'trois')
file[-'un']
match('un', file)
which(file == 'un')
f <- file[1]
file[-match(f, file)]
runApp()
runApp()
# Information sur l'application à déployer
app_name = 'studybud'
username <- 'gabrielcrepeault'
token <- 'F28807D3A18DE8EC270543DADDB10009'
secret <- 'RWQO8l6Y4SbsGnacpChCHzXYXrsJ/36SzgnUOmVl'
# Fonction pour gérer le déploiement de l'application.
deploy2Shinyapps_io <- function(name, username, token, secret, currDir = F){
## Requirements
require(utils)
require(rsconnect)
require(rstudioapi)
## Ask user to select the main directory of the app
if (currDir == F) setwd(rstudioapi::selectDirectory())
## Vérifier que tous les packages nécessaires de l'application
## sont disponibles sur le CRAN
if (!all(grepl("CRAN", rsconnect::appDependencies()$source))){
stop(
"Pour déployer vers les serveur shinyapps.io, Tous les packages requis doivent être disponibles sur le CRAN.
Veuillez vérifier la liste des packages utilisés avec la fonction suivante : \n
rsconnect::appDependencies()")
}
## Établir la connexion avec notre compte shinyapps.io
rsconnect::setAccountInfo(username, token, secret)
## Déployer l'application
deployApp(appName =  name)
}
#rsconnect::appDependencies()
deploy2Shinyapps_io(app_name, username, token, secret)
#rsconnect::appDependencies()
deploy2Shinyapps_io(app_name, username, token, secret)
rsconnect::appDependencies()
